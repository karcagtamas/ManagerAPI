@inject IModalService ModalService
@inject IFriendService FriendService
@using EventManager.Client.Services.Interfaces
@using EventManager.Client.Models
@using EventManager.Client.Shared.Components


<div>
    <div>Friend data</div>
</div>

@code {
    [CascadingParameter]
    public ModalParameters Parameters { get; set; }

    [CascadingParameter]
    public BlazoredModal BlazoredModal { get; set; }

    protected bool ShowForm { get; set; } = true;
    protected int FormId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        FormId = Parameters.Get<int>("FormId");
        BlazoredModal.SetTitle("Form Title");
        await GetFriendData();
    }

    protected void Close()
    {
        ModalService.Close(ModalResult.Cancel());
    }

    protected async Task GetFriendData()
    {
        var a = await FriendService.GetMyFriendRequests();
    }
}