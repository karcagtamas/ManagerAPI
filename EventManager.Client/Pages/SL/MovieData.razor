@page "/movies/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using ManagerAPI.Shared.Helpers
@attribute [Authorize]

<div class="sl-movie-data">
    @if (Movie != null)
    {
        <h1 class="em-page-title">@Movie.Title</h1>
    }
    @if (IsLoading)
    {
        <Loader></Loader>
    }
    else
    {
        <div class="action-bar">
            <MatButton @onclick="OpenEditMovieDialog">Edit</MatButton>
            <MatButton @onclick="DeleteMovie">Delete</MatButton>
            <MatButton @onclick="OpenEditMovieImageDialog"></MatButton>
            @if (Movie != null)
            {
                @if (Movie.IsMine)
                {
                    <MatButton @onclick="RemoveFromMyMovies">Remove From My Books</MatButton>
                    @if (Movie.IsSeen)
                    {
                        <MatButton @onclick="@(() => SetSeenStatus(false))">Set as Unseen</MatButton>
                    }
                    else
                    {
                        <MatButton @onclick="@(() => SetSeenStatus(true))">Set as Seen</MatButton>
                    }
                }
                else
                {
                    <MatButton @onclick="AddToMyMovies">Add to My Books</MatButton>
                }
            }
            <span class="spacer"></span>
            <MatButton @onclick="@(() => Navigation.NavigateTo("/movies"))">Movie List</MatButton>
            <MatButton @onclick="@(() => Navigation.NavigateTo("/my-movies"))">My Movie List</MatButton>
        </div>
        @if (Movie != null)
        {
            <div class="image">
                @if (Movie.ImageData.Length == 0)
                {
                    <img src="/images/profile-icon.jpg" alt="@Movie.Title"/>
                }
                else
                {
                    <img src="@MovieImage" alt="@Movie.ImageTitle"/>
                }
            </div>
            <div class="data">
                <div class="data-row">
                    <strong>Description: </strong> @WriteHelper.WriteEmptyableField(Movie.Description)
                </div>
                <div class="data-row">
                    <strong>Release Year: </strong> @WriteHelper.WriteNullableField(Movie.ReleaseYear)
                </div>
                <div class="data-row">
                    <strong>Director: </strong> @WriteHelper.WriteEmptyableField(Movie.Director)
                </div>
                <div class="data-row">
                    <strong>Length: </strong> @WriteHelper.WriteNullableField(Movie.Length)
                </div>
                <div class="data-row">
                    <strong>Categories: </strong> @WriteHelper.WriteList(Movie.Categories, ", ")
                </div>
                <div class="data-row">
                    <strong>Creation: </strong> @DateHelper.DateToString(Movie.Creation)
                </div>
                <div class="data-row">
                    <strong>Last Update: </strong> @DateHelper.DateToString(Movie.LastUpdate)
                </div>
                <div class="data-row">
                    <strong>Creator: </strong> @Movie.Creator
                </div>
                <div class="data-row">
                    <strong>Last Updater: </strong> @Movie.LastUpdater
                </div>
            </div>
        }
    }
</div>