@page "/books/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using ManagerAPI.Shared.Helpers
@attribute [Authorize(Roles = "Administrator,Status Library User,Status Library Moderator,Status Library Administrator,Root")]

<div class="sl-book-data w-100">
    @if (Book != null)
    {
        <h1 class="em-page-title">@Book.Name</h1>
    }
    @if (IsLoading)
    {
        <Loader></Loader>
    }
    else
    {
        <div class="action-bar">
            @if (CanEdit)
            {
                <div>
                    <MudIconButton Icon="@Icons.Filled.Edit" OnClick="OpenEditBookDialog" />
                </div>
            }

            @if (CanDelete)
            {
                <div>
                    <MudIconButton Icon="@Icons.Filled.Delete" OnClick="OpenDeleteDialog" />
                </div>
            }
            @if (Book != null)
            {
                @if (Book.IsMine)
                {
                    <div>
                        <MudIconButton Icon="@Icons.Filled.Remove" OnClick="RemoveFromMyBooks" />
                        @if (Book.IsRead)
                        {
                            <MudIconButton Icon="@Icons.Filled.VisibilityOff" OnClick="@(() => SetReadStatus(false))" />
                        }
                        else
                        {
                            <MudIconButton Icon="@Icons.Filled.Visibility" OnClick="@(() => SetReadStatus(true))" />
                        }
                    </div>
                }
                else
                {
                    <div>
                        <MudIconButton Icon="@Icons.Filled.Add" OnClick="AddToMyBooks" />
                    </div>
                }
            }
            <span class="spacer"></span>
            <div>
                <MudButton OnClick="@(() => Navigation.NavigateTo("/books"))">Book List</MudButton>
                <MudButton OnClick="@(() => Navigation.NavigateTo("/my-books"))">My Book List</MudButton>
            </div>
        </div>
        @if (Book != null)
        {
            <div class="data">
                <div class="data-row">
                    <strong>Author: </strong> @Book.Author
                </div>
                <div class="data-row">
                    <strong>Description: </strong> @WriteHelper.WriteEmptyableField(Book.Description)
                </div>
                <div class="data-row">
                    <strong>Publish: </strong> @DateHelper.DateToString(Book.Publish)
                </div>
                <div class="data-row">
                    <strong>Creation: </strong> @DateHelper.DateToString(Book.Creation)
                </div>
                <div class="data-row">
                    <strong>Last Update: </strong> @DateHelper.DateToString(Book.LastUpdate)
                </div>
                <div class="data-row">
                    <strong>Creator: </strong> @Book.Creator
                </div>
                <div class="data-row">
                    <strong>Last Updater: </strong> @Book.LastUpdater
                </div>
            </div>
        }
    }
</div>