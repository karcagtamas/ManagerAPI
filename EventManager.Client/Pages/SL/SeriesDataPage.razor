@page "/series/{Id:int}"
@using Microsoft.AspNetCore.Authorization
@using ManagerAPI.Shared.Helpers
@attribute [Authorize(Roles = "Administrator,Status Library User,Status Library Moderator,Status Library Administrator,Root")]

<div class="sl-series-data">
    @if (Series != null)
    {
        <h1 class="em-page-title">@Series.Title</h1>
    }
    @if (IsLoading)
    {
        <Loader></Loader>
    }
    else
    {
        <div class="action-bar">
            @if (CanAddOrEdit)
            {
                <div>
                    <MudIconButton Icon="@Icons.Filled.Edit" OnClick="OpenEditSeriesDialog" Color="Color.Primary"/>
                </div>
            }
            @if (CanDelete)
            {
                <div>
                    <MudIconButton Icon="@Icons.Filled.Delete" OnClick="OpenDeleteDialog" Color="Color.Error"/>
                </div>
            }
            @if (CanAddOrEdit)
            {
                <div>
                    <MudIconButton Icon="@Icons.Filled.Image" OnClick="OpenEditSeriesImageDialog" Color="Color.Secondary"/>
                    <MudIconButton Icon="@Icons.Filled.Category" OnClick="OpenEditSeriesCategoriesDialog" Color="Color.Secondary"/>
                </div>
            }

            @if (Series != null)
            {
                @if (Series.IsMine)
                {
                    <div>
                        <MudIconButton Icon="@Icons.Filled.Remove" OnClick="RemoveFromMySeriesList" Color="Color.Secondary"/>
                        @if (Series.Seasons != null && Series.Seasons.Count > 0 && Series.Seasons.Sum(x => x.Episodes.Count) > 0)
                        {
                            @if (Series.IsSeen)
                            {
                                <MudIconButton Icon="@Icons.Filled.VisibilityOff" OnClick="@(() => SetSeenStatus(false))" Color="Color.Secondary"/>
                            }
                            else
                            {
                                <MudIconButton Icon="@Icons.Filled.Visibility" OnClick="@(() => SetSeenStatus(true))" Color="Color.Secondary"/>
                            }
                        }
                    </div>
                }
                else
                {
                    <div>
                        <MudIconButton Icon="@Icons.Filled.Add" OnClick="AddToMySeriesList" Color="Color.Secondary"/>
                    </div>
                }
            }
            <span class="spacer"></span>
            <div>
                <MudButton OnClick="@(() => Navigation.NavigateTo("/series"))" Color="Color.Primary">Series List</MudButton>
                <MudButton OnClick="@(() => Navigation.NavigateTo("/my-series"))" Color="Color.Primary">My Series List</MudButton>
            </div>
        </div>
        @if (Series != null)
        {
            <MudTabs Rounded="true" Centered="true" Class="tab-group flex-tab" Color="Color.Primary" ActivePanelIndex="ActiveTab" ActivePanelIndexChanged="i => ActiveTab = i">
                <MudTabPanel Text="Data">
                    <div class="data">
                        <div class="data-rows">
                            <div class="data-row">
                                <strong>Description: </strong> @WriteHelper.WriteEmptyableField(Series.Description)
                            </div>
                            <div class="data-row">
                                <strong>Start Year: </strong> @WriteHelper.WriteNullableField(Series.StartYear)
                            </div>
                            <div class="data-row">
                                <strong>End Year: </strong> @WriteHelper.WriteNullableField(Series.EndYear)
                            </div>
                            <div class="data-row">
                                <strong>Categories: </strong> @WriteHelper.WriteList(Series.Categories, ", ")
                            </div>
                            @if (!string.IsNullOrEmpty(Series.TrailerUrl))
                            {
                                <div class="data-row">
                                    <strong>
                                        <a href="@Series.TrailerUrl">Trailer Url</a>
                                    </strong>
                                </div>
                            }
                            <div class="data-row">
                                <strong>Creation: </strong> @DateHelper.DateToString(Series.Creation)
                            </div>
                            <div class="data-row">
                                <strong>Last Update: </strong> @DateHelper.DateToString(Series.LastUpdate)
                            </div>
                            <div class="data-row">
                                <strong>Creator: </strong> @Series.Creator
                            </div>
                            <div class="data-row">
                                <strong>Last Updater: </strong> @Series.LastUpdater
                            </div>
                            <div class="data-row">
                                <strong>Added Status: </strong> @(Series.IsMine ? "Added" : "Not Added")
                            </div>
                            @if (Series.AddedOn != null)
                            {
                                <div class="data-row">
                                    <strong>Added on: </strong> @DateHelper.DateToString(Series.AddedOn)
                                </div>
                            }
                            <div class="rates">
                                @foreach (var rate in RateList)
                                {
                                    <MudIcon Class="rate-icon" Color="Color.Warning" Icon="@(rate <= Series.Rate ? Icons.Filled.Star : Icons.Filled.StarBorder)" @onclick="@(() => UpdateRate(rate))" Tag="@rate"></MudIcon>
                                }
                            </div>
                        </div>
                        <div class="image">
                            <div class="picture">
                                @if (Series.ImageData.Length == 0)
                                {
                                    <img src="/images/profile-icon.jpg" alt="@Series.Title"/>
                                }
                                else
                                {
                                    <img src="@SeriesImage" alt="@Series.ImageTitle"/>
                                }
                            </div>
                        </div>
                    </div>
                </MudTabPanel>
                <MudTabPanel Text="Seasons">
                    <div class="seasons">
                        @foreach (var season in Series.Seasons)
                        {
                            <SeasonEditorComponent Season="@season" CanDelete="@CanDelete" CanAddOrEdit="@CanAddOrEdit" SeriesIsMine="@Series.IsMine" Changed="@Changed"/>
                        }

                        @if (Series.Seasons.Count == 0)
                        {
                            <div class="text-center">Series does not have any season yet.</div>
                        }

                        <div class="season-action">
                            <span class="spacer"></span>
                            @if (CanAddOrEdit)
                            {
                                <MudIconButton Icon="@Icons.Filled.Add" OnClick="AddIncrementedSeason" Color="Color.Primary"/>
                            }
                        </div>
                    </div>
                </MudTabPanel>
                <MudTabPanel Text="Comments">
                    <div class="comments blue-label">
                        <div class="comment-list">
                            @foreach (var comment in CommentList)
                            {
                                <SeriesCommentComponent Comment="@comment" Refresh="@GetComments" SeriesId="@Series.Id"></SeriesCommentComponent>
                            }
                        </div>

                        <div class="input-panel">
                            <div class="col col-12 p-1">
                                <MudTextField @bind-Value="Comment" Label="Comment" FullWidth="true" Variant="Variant.Outlined" Lines="3"/>
                            </div>
                            <div class="down-row">
                                <span class="spacer"></span>
                                <MudButton OnClick="SaveComment" Variant="Variant.Filled" Color="Color.Primary">Comment</MudButton>
                            </div>
                        </div>
                    </div>
                </MudTabPanel>
            </MudTabs>
        }
    }
</div>